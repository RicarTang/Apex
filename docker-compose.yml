services:
  # fastapi backend
  apex_server:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: apex_server
    restart: always
    ports:
      - "4000:4000"
    env_file:
      - .env
    volumes:
      - apex_server_gunicorn_log:/var/log/gunicorn
    depends_on:
      - apex_mysql
      - apex_redis
      - apex_celery
    networks:
      - apex_network
    command:
      - bash
      - -c
      - |
        aerich init -t testframe_backend.src.db.settings.TORTOISE_ORM || true
        aerich init-db || true
        uvicorn testframe_backend.main:app --host 0.0.0.0 --port 4000

  # celery服务
  apex_celery:
    build:
      context: .
      dockerfile: Dockerfile.celery
    container_name: apex_celery
    restart: always
    depends_on:
      - apex_redis
      - apex_mysql
    networks:
      - apex_network
    command:
      - bash
      - -c
      - |
        mkdir -p /var/log/supervisor/
        supervisord -c /app/conf/supervisor.conf
        supervisorctl restart celery_worker
        supervisorctl restart celery_beat
  # redis服务
  apex_redis:
    image: redis:7.2.0
    container_name: apex_redis
    restart: always
    ports:
      - "6379:6379"
    env_file:
      - .env
    volumes:
      - apex_redis:/data
    networks:
      - apex_network
    command: "redis-server --requirepass $REDIS_PASSWORD"
  # mysql服务
  apex_mysql:
    image: mysql:8.1.0
    container_name: apex_mysql
    env_file:
      - .env
    restart: always
    ports:
      - "3306:3306"
    volumes:
      - apex_mysql:/var/lib/mysql
    networks:
      - apex_network
    command:
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_general_ci
      - --lower_case_table_names=1

networks:
  apex_network:
    driver: bridge

volumes:
  apex_mysql:
  apex_redis:
  apex_server_gunicorn_log: