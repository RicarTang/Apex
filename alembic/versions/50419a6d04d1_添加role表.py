"""添加role表

Revision ID: 50419a6d04d1
Revises: 
Create Date: 2024-09-08 19:22:23.719409

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '50419a6d04d1'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ap_role',
    sa.Column('role_name', sa.String(length=20), nullable=False, comment='角色名称'),
    sa.Column('role_key', sa.String(length=20), nullable=False, comment='角色字符'),
    sa.Column('remark', sa.String(length=50), nullable=True, comment='角色详情'),
    sa.Column('is_super', sa.SmallInteger(), nullable=False, comment='是否超级管理员角色,1: True,0: False'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('deleted', sa.SmallInteger(), nullable=False, comment='逻辑删除:0=未删除,1=删除'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('update_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.Column('is_unique', sa.SmallInteger(), nullable=True, comment='配合逻辑删除实现复合唯一索引;1:数据唯一,NULL:该数据删除毋须保持唯一性'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('role_key', 'is_unique'),
    sa.UniqueConstraint('role_name', 'is_unique')
    )
    op.create_index(op.f('ix_ap_role_id'), 'ap_role', ['id'], unique=False)
    op.create_table('ap_user',
    sa.Column('user_name', sa.String(length=20), nullable=False, comment='用户名称'),
    sa.Column('password', sa.String(length=128), nullable=False, comment='密码'),
    sa.Column('status', sa.SmallInteger(), nullable=False, comment='用户状态,0:禁用,1:启用'),
    sa.Column('remark', sa.String(length=50), nullable=True, comment='备注'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('deleted', sa.SmallInteger(), nullable=False, comment='逻辑删除:0=未删除,1=删除'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='创建时间'),
    sa.Column('update_at', sa.DateTime(), nullable=False, comment='更新时间'),
    sa.Column('is_unique', sa.SmallInteger(), nullable=True, comment='配合逻辑删除实现复合唯一索引;1:数据唯一,NULL:该数据删除毋须保持唯一性'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_name', 'is_unique')
    )
    op.create_index(op.f('ix_ap_user_id'), 'ap_user', ['id'], unique=False)
    op.create_index(op.f('ix_ap_user_status'), 'ap_user', ['status'], unique=False)
    op.create_index(op.f('ix_ap_user_user_name'), 'ap_user', ['user_name'], unique=False)
    op.create_table('ap_user_role',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['ap_role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['ap_user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ap_user_role')
    op.drop_index(op.f('ix_ap_user_user_name'), table_name='ap_user')
    op.drop_index(op.f('ix_ap_user_status'), table_name='ap_user')
    op.drop_index(op.f('ix_ap_user_id'), table_name='ap_user')
    op.drop_table('ap_user')
    op.drop_index(op.f('ix_ap_role_id'), table_name='ap_role')
    op.drop_table('ap_role')
    # ### end Alembic commands ###
